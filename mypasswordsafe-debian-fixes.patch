--- mypasswordsafe-0.0.20050615.orig/src/mypasswordsafe.ui.h
+++ mypasswordsafe-0.0.20050615/src/mypasswordsafe.ui.h
@@ -535,7 +535,7 @@
   QString all_safes(tr("All Safes (%1)").arg(Safe::getExtensions()));
   QString all_files(tr("All Files (*)"));
 
-  QString types(QString("%1\n%2\n%3").arg(all_safes).arg(Safe::getTypes()).arg(all_files));
+  QString types(QString("%2\n%1\n%3").arg(all_safes).arg(Safe::getTypes()).arg(all_files));
   QString f;
   bool ret = false;
 
--- mypasswordsafe-0.0.20050615.orig/src/safeserializer.cpp
+++ mypasswordsafe-0.0.20050615/src/safeserializer.cpp
@@ -22,14 +22,15 @@
 #include "plaintextlizer.hpp"
 #include "serializers.hpp"
 #include "xmlserializer.hpp"
+#include <algorithm>
 
 using namespace std;
 
 SafeSerializer::SerializerVec SafeSerializer::m_serializers;
-PlainTextLizer _plain_text_lizer;
 BlowfishLizer2 _blowfish_lizer2;
 BlowfishLizer _blowfish_lizer;
 XmlSerializer _xml_serializer;
+PlainTextLizer _plain_text_lizer;
 
 #if BYTE_ORDER == BIG_ENDIAN
 BorkedBlowfishLizer2 _borked_blowfish_lizer2;
--- mypasswordsafe-0.0.20050615.orig/src/crypto/bfproxy.cpp
+++ mypasswordsafe-0.0.20050615/src/crypto/bfproxy.cpp
@@ -17,6 +17,7 @@
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
  */
 #include "bfproxy.hpp"
+#include <cstring>
 
 BFProxy::BFProxy(const unsigned char *key, int len)
 {
--- mypasswordsafe-0.0.20050615.orig/src/encryptedstring.cpp
+++ mypasswordsafe-0.0.20050615/src/encryptedstring.cpp
@@ -22,6 +22,8 @@
 #include "crypto/sha1.h"
 #include "securedstring.hpp"
 #include "encryptedstring.hpp"
+#include <cstring>
+#include <cstdlib>
 
 using namespace std;
 
--- mypasswordsafe-0.0.20050615.orig/src/pwsafe/Util.h
+++ mypasswordsafe-0.0.20050615/src/pwsafe/Util.h
@@ -11,6 +11,7 @@
 
 #include <string>
 using std::string;
+#include <cstring>
 #include "PW_sha1.h"
 #include "PwsPlatform.h"
 #include "myutil.hpp"
--- mypasswordsafe-0.0.20050615.orig/src/pwsafe/Util.cpp
+++ mypasswordsafe-0.0.20050615/src/pwsafe/Util.cpp
@@ -6,6 +6,8 @@
 //#include "PwsPlatform.h"
 
 #include <stdio.h>
+#include <limits.h>
+#include <cstdlib>
 #include <iostream>
 using std::cout;
 using std::endl;
--- mypasswordsafe-0.0.20050615.orig/src/safe.hpp
+++ mypasswordsafe-0.0.20050615/src/safe.hpp
@@ -128,7 +128,7 @@
   SafeEntry(SafeGroup *parent);
   SafeEntry(SafeGroup *parent,
 	    const QString &n, const QString &u,
-	    const EncryptedString &p, const QString &n);
+	    const EncryptedString &p, const QString &z);
   SafeEntry(const SafeEntry &item);
   ~SafeEntry();
 
